name: Launcher Next CI

on:
  workflow_dispatch:
  push:
    tags:
      - 'v1.1.*'
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Use Node.js 14.16.0
        uses: actions/setup-node@v1
        with:
          node-version: '14.16.0'

      - name: npm run install
        run: |
          npm i
      - name: npm run lint
        run: |
          npm run lint


      ##Tag Number input
      - name: Get latest release version tag number
        id: get_version
        uses: battila7/get-version-action@v2

      ##ReleaseChannel - go!
      - name: Create Release
        if: matrix.os == 'macos-latest'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: 73svSPGDLauncher - ${{ steps.get_version.outputs.version }}
          body: |
            ダウンロードはこちらから！
            [Windows](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/73svSPGDLauncher-win-setup.exe)
            [Mac OS X](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/73svSPbGDLauncher-mac-setup.dmg)
            [Linux](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/73svSPGDLauncher-linux-setup.AppImage)

            Windows : [73svSPGDLauncher-win-setup.exe]を実行すると自動的にインストールが開始し、ソフトが起動します。
            Mac OS X : [73svSPGDLauncher-mac-setup.dmg]を実行してアプリをアプリケーションにコピーしてください。
            Linux : どれでもできればよし！

            ※データフォルダリンク例
            Mac OS X
            /Users/ [user] /Library/Application Support/73svspgdLauncher
            /Users/ [user] /Library/Application Support/73svspgdLauncher_next

            Windows
            C:\Users\ [user] \AppData\Roaming\73svspgdLauncher
            C:\Users\ [user] \AppData\Roaming\73svspgdLauncher_next
            
            Linuxわからん

            Build by ${{ github.actor }}
          draft: false
          prerelease: false



      ##CreateAPP - npm run release
      - name: npm run release for windows
        if: matrix.os == 'windows-latest' && github.event_name == 'push'
        env:
          CI: ''
          TRAVIS_TAG: ''
          APPVEYOR_REPO_TAG_NAME: ''
          CIRCLE_TAG: ''
          BITRISE_GIT_TAG: ''
          CI_BUILD_TAG: ''
          RELEASE_TESTING: true
        run: |
          npm run release
      - name: npm run release for mac and linux
        if: matrix.os != 'windows-latest' || github.event_name != 'push'
        env:
          CI: ''
          TRAVIS_TAG: ''
          APPVEYOR_REPO_TAG_NAME: ''
          CIRCLE_TAG: ''
          BITRISE_GIT_TAG: ''
          CI_BUILD_TAG: ''
          RELEASE_TESTING: true
        run: |
          npm run release
#      - name: upload release to gh releases
#        if: github.event_name == 'push' && github.ref == 'refs/heads/releases'
#        env:
#          GH_ACCESS_TOKEN_RELEASES: ${{ secrets.GH_ACCESS_TOKEN_RELEASES }}
#        run: |
#          npm run upload


      ##ActionRelease - zip
      - uses: actions/upload-artifact@v1
        name: Action-Upload-MacOS
        if: matrix.os == 'macos-latest'
        with:
          name: MacOs Release
          path: deploy
      - uses: actions/upload-artifact@v1
        name: Action-Upload-Windows
        if: matrix.os == 'windows-latest'
        with:
          name: Windows Release
          path: deploy
      - uses: actions/upload-artifact@v1
        name: Action-Upload-Ubuntu
        if: matrix.os == 'ubuntu-latest'
        with:
          name: Linux Release
          path: deploy


      ##GitHub-Release-Upload
      - uses: xresloader/upload-to-github-release@v1
        name: Upload Release File - MacOS
        if: matrix.os != 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          file: "deploy"
          tags: true
          draft: false
          tag_name: ${{ steps.get_version.outputs.version }}
      - uses: xresloader/upload-to-github-release@v1
        name: Upload Release File - Windows
        if: matrix.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          file: "deploy"
          tags: true
          draft: false
          overwrite: true
          tag_name: ${{ steps.get_version.outputs.version }}

